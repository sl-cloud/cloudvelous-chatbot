# Ruff configuration for Python linting and formatting
# Documentation: https://docs.astral.sh/ruff/

# Exclude commonly ignored directories
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "venv",
    "__pycache__",
    "htmlcov",
    "*.egg-info",
    "alembic/versions",
]

# Same line length as Black
line-length = 100

# Target Python 3.11+
target-version = "py311"

[lint]
# Enable specific rule categories
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # Pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "T20",  # flake8-print
    "SIM",  # flake8-simplify
    "RUF",  # Ruff-specific rules
]

# Ignore specific rules
ignore = [
    "E501",   # Line too long (handled by formatter)
    "B008",   # Do not perform function call in argument defaults (FastAPI Depends pattern)
    "B904",   # raise ... from e (sometimes we want bare raises)
    "A003",   # Class attribute shadows Python builtin
    "T201",   # print() statements (allowed in scripts)
]

[lint.per-file-ignores]
# Test files can have longer lines and use assert
"tests/**/*.py" = ["E501", "S101"]
# Scripts can use print statements
"scripts/**/*.py" = ["T201"]
# Allow unused imports in __init__.py files
"__init__.py" = ["F401"]

[lint.isort]
known-first-party = ["app", "tests"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[format]
# Use double quotes for strings
quote-style = "double"

# Indent with spaces
indent-style = "space"

# Like Black, respect magic trailing commas
skip-magic-trailing-comma = false

# Like Black, automatically detect line endings
line-ending = "auto"

